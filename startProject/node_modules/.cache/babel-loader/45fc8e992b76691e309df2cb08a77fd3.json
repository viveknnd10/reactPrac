{"ast":null,"code":"var _jsxFileName = \"/Users/kumarvivekanand/Desktop/react projects/reactPrac/startProject/src/components/forms/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  //here we are using multiple states which is also correct \n  //but if we have to use only one state then taht is below\n  //const [titleChanged,setTitleChanged]=useState('');\n  //const [dateChanged,setDateChanged]=useState('');\n  //const [amountChanged,setAmountChanged]=useState('');\n  //using only one state to update the 3 values\n  const [userInput, setUserInput] = useState({\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: ''\n  }); //but this above way has a problem i.e. it doesnt give the latest prev state, \n  //by mistake it can give an outdated state as well when we are updating multiple states at a time\n  //const titleChangeHandler = (event) => {\n  //    //setTitleChanged(event.target.value);\n  //\n  //    setUserInput({\n  //        ...userInput,\n  //        enteredTitle:event.target.value\n  //    })\n  //};\n  //const dateChangeHandler = (event) => {\n  //    //setDateChanged(event.target.value);\n  //\n  //    setUserInput({\n  //        ...userInput,\n  //        enteredDate:event.target.value\n  //    })\n  //}\n  //\n  //const amountChangeHandler = (event) => {\n  //    //setAmountChanged(event.target.value);\n  //\n  //    setUserInput({\n  //        ...userInput,\n  //        enteredAmount:event.target.value\n  //    })\n  //}\n  //here the prevState ensures that the latest previous state is passed\n\n  const titleChangeHandler = event => {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredTitle: event.target.value\n      };\n    });\n  };\n\n  const amountChangeHandler = event => {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredAmount: event.target.value\n      };\n    });\n  };\n\n  const dateChangeHandler = event => {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredDate: event.target.value\n      };\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: userInput.enteredTitle,\n      amount: userInput.enteredAmount,\n      date: new Date(userInput.enteredDate)\n    };\n    console.log(expenseData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: \"enteredAmount\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: \"enteredDate\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseForm, \"+OJcFXr81DwFpplaThJQDJazG1c=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/kumarvivekanand/Desktop/react projects/reactPrac/startProject/src/components/forms/ExpenseForm.js"],"names":["React","useState","ExpenseForm","userInput","setUserInput","enteredTitle","enteredAmount","enteredDate","titleChangeHandler","event","prevState","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './ExpenseForm.css';\nconst ExpenseForm = () => {\n    //here we are using multiple states which is also correct \n    //but if we have to use only one state then taht is below\n    //const [titleChanged,setTitleChanged]=useState('');\n    //const [dateChanged,setDateChanged]=useState('');\n    //const [amountChanged,setAmountChanged]=useState('');\n\n    //using only one state to update the 3 values\n    const [userInput,setUserInput]=useState({\n        enteredTitle:'',\n        enteredAmount:'',\n        enteredDate:'',\n    });\n\n    //but this above way has a problem i.e. it doesnt give the latest prev state, \n    //by mistake it can give an outdated state as well when we are updating multiple states at a time\n    //const titleChangeHandler = (event) => {\n    //    //setTitleChanged(event.target.value);\n    //\n    //    setUserInput({\n    //        ...userInput,\n    //        enteredTitle:event.target.value\n    //    })\n    //};\n    //const dateChangeHandler = (event) => {\n    //    //setDateChanged(event.target.value);\n    //\n    //    setUserInput({\n    //        ...userInput,\n    //        enteredDate:event.target.value\n    //    })\n    //}\n    //\n    //const amountChangeHandler = (event) => {\n    //    //setAmountChanged(event.target.value);\n    //\n    //    setUserInput({\n    //        ...userInput,\n    //        enteredAmount:event.target.value\n    //    })\n    //}\n\n    //here the prevState ensures that the latest previous state is passed\n        const titleChangeHandler = (event) => {\n                setUserInput((prevState) => {\n                    return {\n                    ...prevState,\n                    enteredTitle:event.target.value,\n                };\n                });\n            };\n\n        const amountChangeHandler = (event) => {\n            setUserInput((prevState) => {\n                return {\n                ...prevState,\n                enteredAmount:event.target.value,\n            };\n            });\n        };\n\n        const dateChangeHandler = (event) => {\n            setUserInput((prevState) => {\n                return {\n                ...prevState,\n                enteredDate:event.target.value,\n            };\n            });\n        };\n        const submitHandler = (event) =>{\n            event.preventDefault();\n\n            const expenseData={\n                title: userInput.enteredTitle,\n                amount: userInput.enteredAmount,\n                date: new Date(userInput.enteredDate)\n             };\n            console.log(expenseData);   \n        }\n\n    return(\n        <form onSubmit={submitHandler}>\n            <div className='new-expense__controls'>\n                <div className='new-expense__control'>\n                    <label>Title</label>\n                    <input \n                    type='text'\n                    value={enteredTitle} \n                    onChange={titleChangeHandler}/>\n                </div>\n                <div className='new-expense__control'>\n                    <label>Amount</label>\n                    <input \n                    type='number'\n                    value='enteredAmount' \n                    min=\"0.01\" \n                    step=\"0.01\" \n                    onChange={amountChangeHandler} />\n                </div>\n                <div className='new-expense__control'>\n                    <label>Date</label>\n                    <input \n                    type='date' \n                    value='enteredDate'\n                    min=\"2019-01-01\" \n                    max=\"2022-12-31\" \n                    onChange={dateChangeHandler}/>\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"submit\">Add Expense</button>\n            </div>\n        </form>\n    );\n};\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}